// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/barnettt/banking/service (interfaces: AccountService)

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	domain "github.com/barnettt/banking/domain"
	dto "github.com/barnettt/banking/dto"
	exceptions "github.com/barnettt/banking/exceptions"
	gomock "github.com/golang/mock/gomock"
)

// MockAccountService is a mock of AccountService interface.
type MockAccountService struct {
	ctrl     *gomock.Controller
	recorder *MockAccountServiceMockRecorder
}

// MockAccountServiceMockRecorder is the mock recorder for MockAccountService.
type MockAccountServiceMockRecorder struct {
	mock *MockAccountService
}

// NewMockAccountService creates a new mock instance.
func NewMockAccountService(ctrl *gomock.Controller) *MockAccountService {
	mock := &MockAccountService{ctrl: ctrl}
	mock.recorder = &MockAccountServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountService) EXPECT() *MockAccountServiceMockRecorder {
	return m.recorder
}

// GetAccount mocks base method.
func (m *MockAccountService) GetAccount(arg0 string) (*domain.Account, *exceptions.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccount", arg0)
	ret0, _ := ret[0].(*domain.Account)
	ret1, _ := ret[1].(*exceptions.AppError)
	return ret0, ret1
}

// GetAccount indicates an expected call of GetAccount.
func (mr *MockAccountServiceMockRecorder) GetAccount(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccount", reflect.TypeOf((*MockAccountService)(nil).GetAccount), arg0)
}

// Save mocks base method.
func (m *MockAccountService) Save(arg0 *dto.AccountRequest) (*dto.NewAccountResponse, *exceptions.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(*dto.NewAccountResponse)
	ret1, _ := ret[1].(*exceptions.AppError)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockAccountServiceMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockAccountService)(nil).Save), arg0)
}

// UpdateAccount mocks base method.
func (m *MockAccountService) UpdateAccount(arg0 *domain.Account) *exceptions.AppError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAccount", arg0)
	ret0, _ := ret[0].(*exceptions.AppError)
	return ret0
}

// UpdateAccount indicates an expected call of UpdateAccount.
func (mr *MockAccountServiceMockRecorder) UpdateAccount(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAccount", reflect.TypeOf((*MockAccountService)(nil).UpdateAccount), arg0)
}
